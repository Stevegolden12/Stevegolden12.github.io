"use strict"; var __extends = function (e, t) { function o() { this.constructor = e } for (var r in t) __hasProp.call(t, r) && (e[r] = t[r]); return o.prototype = t.prototype, e.prototype = new o, e.__super__ = t.prototype, e }, __hasProp = {}.hasOwnProperty; $.ajaxPrefilter(function (e, t, o) { var r, a, s, n; (function () { var e; e = "modernizr"; try { return localStorage.setItem(e, e), localStorage.removeItem(e), !0 } catch (e) { return e, !1 } })() && e.localCache && (a = e.cacheTTL || 5, r = e.cacheKey || e.url.replace(/jQuery.*/, "") + e.type + (e.data || ""), e.isCacheValid && !e.isCacheValid() && localStorage.removeItem(r), (s = localStorage.getItem(r + "cachettl")) && s < +new Date && (localStorage.removeItem(r), localStorage.removeItem(r + "cachettl"), s = "expired"), (n = localStorage.getItem(r)) ? (0 === e.dataType.indexOf("json") && (n = JSON.parse(n)), e.success(n), o.abort()) : (e.success && (e.realsuccess = e.success), e.success = function (t) { var o, a; a = t, 0 === this.dataType.indexOf("json") && (a = JSON.stringify(t)); try { localStorage.setItem(r, a) } catch (t) { o = t, localStorage.removeItem(r), localStorage.removeItem(r + "cachettl"), e.cacheError && e.cacheError(o, r, a) } e.realsuccess && e.realsuccess(t) }, s && "expired" !== s || localStorage.setItem(r + "cachettl", +new Date + 36e5 * a))) }), function (e) { e.fn.reportCard = function (t) { var o, r, a, s; return s = function (e) { return e.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") }, r = function () { function o(e) { this.userName = e.userName, this.site = e.site, this.badgesAmount = e.badgesAmount, this.tooltips = e.tooltips } return o.prototype.build = function (o) { var r, a, n; a = o.badges.slice(-t.badgesAmount), n = 100 / (a.length + 1) + "%", r = "<h2>I have passed " + o.badge_count + " lessons and scored " + s(o.points_total) + " points at " + o.site + '!</h2>\n<p>Check out some of my last passed course content at the badges below: </p>\n<ul class="badges">', a.forEach(function (e) { return r += '<li style="width: ' + n + ';" title="' + e.label + '">\n  <a href="' + o.profile_url + '" target="_blank" data-toggle="tooltip" data-placement="top" >\n    <img src="' + e.icon_url + '" alt="' + e.label + '"/>\n  </a>\n</li>' }), r += "</ul>", t.$element.html(r), t.tooltips && t.$element.each(function (t, o) { return e(o).find("li").tooltip() }) }, o.prototype.transform = function (e) { return e }, o.prototype.getData = function (o) { var r; return r = this, e.ajax({ type: "GET", url: this.url, localCache: !0, cacheTTL: .5, cacheKey: "reportcard" + t.site + t.userName, dataType: o.dataType, crossDomain: !0, async: !0, beforeSend: function () { t.$element.html('<div class="spinner"></div>') }, success: function (e) { return r.build(r.transform(e)) } }) }, o }(), a = function (e) { function t(e) { t.__super__.constructor.call(this, e), this.url = "https://teamtreehouse.com/" + this.userName + ".json" } return __extends(t, r), t.prototype.getData = function () { return t.__super__.getData.call(this, { dataType: "json" }) }, t.prototype.transform = function (e) { return { site: "Treehouse", username: e.profile_name, profile_url: e.profile_url, points: e.points, points_total: e.points.total, badge_count: e.badges.length, badges: e.badges.map(function (e) { return { courses: e.courses, course_count: e.courses.length, earned_date: Date.parse(e.earned_date), icon_url: e.icon_url, label: e.name, url: e.url } }) } }, t }(), o = function (e) { function t(e) { t.__super__.constructor.call(this, e), this.url = "https://www.codeschool.com/users/" + this.userName + ".json" } return __extends(t, r), t.prototype.getData = function () { return t.__super__.getData.call(this, { dataType: "jsonp" }) }, t.prototype.transform = function (e) { return { site: "Code School", username: e.user.username, profile_url: "https://www.codeschool.com/users/" + e.user.username, points: void 0, points_total: e.user.total_score, badge_count: e.badges.length, badges: e.badges.map(function (e) { return { courses: void 0, course_count: void 0, earned_date: void 0, icon_url: e.badge, label: e.name, url: e.course_url } }) } }, t }(), t.$element = this, t.badgesAmount = t.badgesAmount ? t.badgesAmount : 5, t.userName || alert("You need to pass in a username"), t.site || alert("You need to pass in a site"), "treehouse" === t.site ? new a(t).getData() : "codeschool" === t.site ? new o(t).getData() : void 0 } }(jQuery);
